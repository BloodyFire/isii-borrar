// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OneHope.API.Models;

#nullable disable

namespace OneHope.API.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OneHope.API.Models.Alquiler", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ApellidosCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DireccionEnvio")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("EmailCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaAlquiler")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFinAlquiler")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInAlquiler")
                        .HasColumnType("datetime2");

                    b.Property<int>("MetodoPago")
                        .HasColumnType("int");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TelefonoCliente")
                        .HasColumnType("int");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.ToTable("Alquileres");
                });

            modelBuilder.Entity("OneHope.API.Models.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<int>("MetodoPago")
                        .HasColumnType("int");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("OneHope.API.Models.Devolucion", b =>
                {
                    b.Property<int>("IdDevolucion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDevolucion"));

                    b.Property<float>("CuantiaDevolucion")
                        .HasColumnType("real");

                    b.Property<string>("DireccionRecogida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDevolucion");

                    b.ToTable("Devoluciones");
                });

            modelBuilder.Entity("OneHope.API.Models.LineaAlquiler", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AlquilerID")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("PortatilID")
                        .HasColumnType("int");

                    b.Property<double>("PortatilPrecioAlquiler")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasAlternateKey("AlquilerID", "PortatilID");

                    b.HasIndex("PortatilID");

                    b.ToTable("LineaAlquiler");
                });

            modelBuilder.Entity("OneHope.API.Models.LineaCompra", b =>
                {
                    b.Property<int>("IdLinea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLinea"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CompraId")
                        .HasColumnType("int");

                    b.Property<int>("IdCompra")
                        .HasColumnType("int");

                    b.Property<int>("IdProd")
                        .HasColumnType("int");

                    b.Property<int?>("LineaCompraIdLinea")
                        .HasColumnType("int");

                    b.Property<int>("PortatilId")
                        .HasColumnType("int");

                    b.Property<double>("PrecioUnitario")
                        .HasColumnType("float");

                    b.HasKey("IdLinea");

                    b.HasAlternateKey("IdProd", "IdCompra");

                    b.HasIndex("CompraId");

                    b.HasIndex("LineaCompraIdLinea");

                    b.HasIndex("PortatilId");

                    b.ToTable("LineaCompra");
                });

            modelBuilder.Entity("OneHope.API.Models.LineaDevolucion", b =>
                {
                    b.Property<int>("IdLinea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLinea"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("DevolucionIdDevolucion")
                        .HasColumnType("int");

                    b.Property<int>("IdDevolucion")
                        .HasColumnType("int");

                    b.Property<int>("LineaCompraId")
                        .HasColumnType("int");

                    b.HasKey("IdLinea");

                    b.HasAlternateKey("IdDevolucion", "LineaCompraId");

                    b.HasIndex("DevolucionIdDevolucion");

                    b.HasIndex("LineaCompraId")
                        .IsUnique();

                    b.ToTable("LineaDevolucion");
                });

            modelBuilder.Entity("OneHope.API.Models.LineaPedido", b =>
                {
                    b.Property<int>("PortatilId")
                        .HasColumnType("int");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<double>("PrecioUnitario")
                        .HasColumnType("float");

                    b.HasKey("PortatilId", "PedidoId");

                    b.HasIndex("PedidoId");

                    b.ToTable("LineaPedido");
                });

            modelBuilder.Entity("OneHope.API.Models.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NombreMarca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasAlternateKey("NombreMarca");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("OneHope.API.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comentarios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CódigoEmpleado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaPedido")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoMetodoPago")
                        .HasColumnType("int");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("OneHope.API.Models.Portatil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("PrecioAlquiler")
                        .HasColumnType("float");

                    b.Property<double>("PrecioCompra")
                        .HasColumnType("float");

                    b.Property<double>("PrecioCoste")
                        .HasColumnType("float");

                    b.Property<int>("ProcesadorId")
                        .HasColumnType("int");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<int>("RamId")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("StockAlquilar")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("Modelo");

                    b.HasIndex("MarcaId");

                    b.HasIndex("ProcesadorId");

                    b.HasIndex("ProveedorId");

                    b.HasIndex("RamId");

                    b.ToTable("Portatiles");
                });

            modelBuilder.Entity("OneHope.API.Models.Procesador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ModeloProcesador")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasAlternateKey("ModeloProcesador");

                    b.ToTable("Procesadores");
                });

            modelBuilder.Entity("OneHope.API.Models.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CIF")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasAlternateKey("CIF");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("OneHope.API.Models.Ram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Capacidad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Capacidad");

                    b.ToTable("Rams");
                });

            modelBuilder.Entity("OneHope.API.Models.LineaAlquiler", b =>
                {
                    b.HasOne("OneHope.API.Models.Alquiler", "Alquiler")
                        .WithMany("LineasAlquiler")
                        .HasForeignKey("AlquilerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneHope.API.Models.Portatil", "Portatil")
                        .WithMany("LineasAlquiler")
                        .HasForeignKey("PortatilID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alquiler");

                    b.Navigation("Portatil");
                });

            modelBuilder.Entity("OneHope.API.Models.LineaCompra", b =>
                {
                    b.HasOne("OneHope.API.Models.Compra", "Compra")
                        .WithMany("LineasCompra")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneHope.API.Models.LineaCompra", null)
                        .WithMany("LineasCompra")
                        .HasForeignKey("LineaCompraIdLinea");

                    b.HasOne("OneHope.API.Models.Portatil", "Portatil")
                        .WithMany("LineasCompra")
                        .HasForeignKey("PortatilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Portatil");
                });

            modelBuilder.Entity("OneHope.API.Models.LineaDevolucion", b =>
                {
                    b.HasOne("OneHope.API.Models.Devolucion", "Devolucion")
                        .WithMany("LineaDevolucion")
                        .HasForeignKey("DevolucionIdDevolucion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneHope.API.Models.LineaCompra", "LineaCompra")
                        .WithOne("LineaDevolucion")
                        .HasForeignKey("OneHope.API.Models.LineaDevolucion", "LineaCompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Devolucion");

                    b.Navigation("LineaCompra");
                });

            modelBuilder.Entity("OneHope.API.Models.LineaPedido", b =>
                {
                    b.HasOne("OneHope.API.Models.Pedido", "Pedido")
                        .WithMany("LineasPedido")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneHope.API.Models.Portatil", "Portatil")
                        .WithMany("LineasPedido")
                        .HasForeignKey("PortatilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Portatil");
                });

            modelBuilder.Entity("OneHope.API.Models.Portatil", b =>
                {
                    b.HasOne("OneHope.API.Models.Marca", "Marca")
                        .WithMany("Portatiles")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneHope.API.Models.Procesador", "Procesador")
                        .WithMany("Portatiles")
                        .HasForeignKey("ProcesadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneHope.API.Models.Proveedor", "Proveedor")
                        .WithMany("Portatiles")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneHope.API.Models.Ram", "Ram")
                        .WithMany("Portatiles")
                        .HasForeignKey("RamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");

                    b.Navigation("Procesador");

                    b.Navigation("Proveedor");

                    b.Navigation("Ram");
                });

            modelBuilder.Entity("OneHope.API.Models.Alquiler", b =>
                {
                    b.Navigation("LineasAlquiler");
                });

            modelBuilder.Entity("OneHope.API.Models.Compra", b =>
                {
                    b.Navigation("LineasCompra");
                });

            modelBuilder.Entity("OneHope.API.Models.Devolucion", b =>
                {
                    b.Navigation("LineaDevolucion");
                });

            modelBuilder.Entity("OneHope.API.Models.LineaCompra", b =>
                {
                    b.Navigation("LineaDevolucion");

                    b.Navigation("LineasCompra");
                });

            modelBuilder.Entity("OneHope.API.Models.Marca", b =>
                {
                    b.Navigation("Portatiles");
                });

            modelBuilder.Entity("OneHope.API.Models.Pedido", b =>
                {
                    b.Navigation("LineasPedido");
                });

            modelBuilder.Entity("OneHope.API.Models.Portatil", b =>
                {
                    b.Navigation("LineasAlquiler");

                    b.Navigation("LineasCompra");

                    b.Navigation("LineasPedido");
                });

            modelBuilder.Entity("OneHope.API.Models.Procesador", b =>
                {
                    b.Navigation("Portatiles");
                });

            modelBuilder.Entity("OneHope.API.Models.Proveedor", b =>
                {
                    b.Navigation("Portatiles");
                });

            modelBuilder.Entity("OneHope.API.Models.Ram", b =>
                {
                    b.Navigation("Portatiles");
                });
#pragma warning restore 612, 618
        }
    }
}
