@* Especifica la ruta en la que se mostrará esta página. *@
@page "/compras/devolver/detalledevolucion"

@* Espacio de nombres del cliente generado con NSwag. *@
@using PortatilesAPI;
@* Espacio de nombres donde están los DTOs. *@

@* Este es el servicio que se ha definido como HttpClient en Program.cs. *@
@inject swaggerClient swaggerClient;

@* Se inyecta el servicio que gestiona la navegación entre páginas (debe ser añadido en Program.cs). *@
@inject NavigationManager Navigation;

<h3>Resumen de la devolución</h3>

@if (!mensajeError.Equals(""))
{
    <div class="card-header">
        @tituloError
    </div>
    <div class="alert alert-danger">
        @mensajeError
    </div>
}
else
{

    @* https://getbootstrap.com/docs/4.0/components/input-group/ *@
    @* input-group permite personalizar los controles para introducir datos. *@
    <div class="input-group">
        <div class="input-group-prepend">
            <span class="input-group-text" id="direccion"><b>Dirección: </b> @(devolucion.DireccionRecogida)</span>
            <span class="input-group-text" id="fecha-devolucion"><b>Fecha de devolución: </b> @(devolucion.Fecha.ToString("dd-MMM-yyyy HH:mm:ss").ToUpper())</span>
        </div>

    </div> <!-- FIN INPUT-GROUP -->
    <!-- TABLA CON LA LISTA DE ARTÍCULOS COMPRADOS -->
    @if (Portatiles == null || Portatiles.Count() == 0)
    {
        <br />
        <p><em>No hay portatiles que cumplan los criterios seleccionados.</em></p>
    }
    else
    {
        <div class="mh-100 table-responsive">
            <table class="table table-condensed table-hover" id="TablaPortatiles">
                <thead>
                    <tr>
                        <th>Id Compra</th>
                        <th>Modelo</th>
                        <th>Cantidad</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var portatil in Portatiles)
                    {
                        <tr id="portatilDevolver_@portatil.IdCompra">
                            <td>@portatil.IdCompra</td>
                            <td>@portatil.Modelo</td>
                            <td>@portatil.Cantidad</td>

                        </tr>
                    }

                </tbody>
                <tfoot><tr><td /><td /><td><em>Cuantía de devolución</em></td><td>@devolucion.CuantiaDevolucion</td></tr></tfoot>
            </table>
        </div>
        <!-- FIN TABLA CON LA LISTA DE ARTÍCULOS -->
    }

}

@* Botón para navegar de nuevo al inicio. *@
<div class="col-md">
    <div class="form-floating">
        <button class="btn btn-primary" type="submit" id="Submit" @onclick="@(()=>NavegarInicio())">
            Finalizar
        </button>
    </div>
</div>


@code {
    @* Este es id de la devolucion a mostrar que se pasa en el parámetro que se le pasa a la página. *@
    [Parameter]
    [SupplyParameterFromQuery]
    public int DevolucionId { get; set; }

    @* Se usa para almacenar el mensaje de error cuando lo hay. *@
    private string mensajeError = "";
    @* Es el título de la pantalla de error. *@
    private string tituloError = "Error";

    @* Para la lista de portatiles que se muestra en la tabla. *@
    private ICollection<DevolucionItemDTO> Portatiles { get; set; } =
                                                    new List<DevolucionItemDTO>();

    private DevolucionDetailDTO devolucion = new DevolucionDetailDTO();

    @* Navegar a la página de inicio. *@
    private void NavegarInicio()
    {
        @* Volver al inicio. *@
        Navigation.NavigateTo("/compras/devolver");
    }

    // Se ejecutará al cargarse la página.
    protected override async Task OnInitializedAsync()
    {
        @* Cargar los datos de los artículos. *@
        try
        {
            devolucion = await swaggerClient.GetDevolucionAsync(DevolucionId);
            Portatiles = devolucion.LineasDevoluciones;
        }
        catch (ApiException<ValidationProblemDetails> apiexceptionvalidation)
        {
            @* Este es el título de la sección de errores que deseamos. *@
            tituloError = "Error: no se pueden mostrar los detalles de la devolucion.";

            if (apiexceptionvalidation.Result.Errors.Values != null)
            {
                mensajeError = "";
                foreach (var errors in apiexceptionvalidation.Result.Errors.Values)
                    //https://learn.microsoft.com/en-us/dotnet/api/system.string.join?view=net-7.0
                    mensajeError = string.Join("(*) ", mensajeError, string.Join(" (*) ", errors));
            }
            @* Se indica que los datos han cambiado y por lo tanto la IU se debe actualizar. *@
            StateHasChanged();
        }
        catch (ApiException apiexception)
        {
            @* Este es el título de la sección de errores que deseamos. *@
            tituloError = "Error";
            mensajeError = $"No se pueden mostrar los detalles de la devolucion cuyo id es: {DevolucionId}.";
            @* Se indica que los datos han cambiado y por lo tanto la IU se debe actualizar. *@
            StateHasChanged();
        }
    }
}
